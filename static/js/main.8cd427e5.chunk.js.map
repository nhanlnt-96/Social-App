{"version":3,"sources":["configs/navigation.config.jsx","store/redux/auth/actionTypes.js","store/redux/auth/actions.js","components/logOutConfirm/index.js","components/navigation/index.js","store/redux/posts/actionTypes.js","store/redux/posts/actions.js","components/postInput/index.js","assets/8c4ac8c19d21687f3130.png","assets/post-img.jpeg","store/redux/likes/actionTypes.js","components/likeSystem/index.js","store/redux/likes/actions.js","components/deleteSystem/index.js","components/postUsername/index.js","components/editPost/index.js","components/feedCard/index.js","module/homepage/index.js","components/feedCardPostDetail/index.js","store/redux/comments/actionTypes.js","store/redux/comments/actions.js","components/deleteCommentConfirm/index.js","components/comment/index.js","components/commentInput/index.js","module/postDetail/index.js","assets/page-not-found.png","module/pageNotFound/index.js","network/services/auth.js","components/forgotPassword/index.js","module/auth/LoginPage.js","module/auth/RegisterPage.js","module/profilePage/index.js","configs/router.config.jsx","components/layoutModule/index.js","App.js","reportWebVitals.js","store/redux/posts/index.js","store/redux/comments/index.js","store/redux/auth/index.js","store/redux/likes/index.js","store/rootReducer.js","network/services/post.js","network/services/comment.js","network/services/likesPost.js","store/sagas/requestSaga.js","store/sagas/handlerSaga.js","store/sagas/rootSaga.js","index.js"],"names":["MenuList","id","label","icon","DesktopOutlined","url","AuthList","UserAddOutlined","LoginOutlined","LOGIN_USER_SUCCESS","LOGOUT_USER","GET_AUTH_START","GET_AUTH_SUCCESS","GET_AUTH_FAIL","loginSuccess","values","type","payload","getAuthStart","LogOutConfirm","username","dispatch","useDispatch","useState","visible","setVisible","className","onClick","title","onOk","localStorage","removeItem","message","success","onCancel","Header","Layout","Navigation","state","useSelector","isAuth","useEffect","style","position","zIndex","width","to","theme","mode","defaultSelectedKeys","isLogged","userAuth","error","map","val","Item","UserOutlined","LogoutOutlined","response","LOAD_POST_START","LOAD_POST_SUCCESS","LOAD_POST_FAIL","LOAD_POST_BY_ID_START","LOAD_POST_BY_ID_SUCCESS","LOAD_POST_BY_ID_FAIL","LOAD_POST_BY_USER_START","LOAD_POST_BY_USER_SUCCESS","LOAD_POST_BY_USER_FAIL","CREATE_POST_REQUEST","DELETE_POST_REQUEST","EDIT_POST_REQUEST","loadPostStart","loadPostSuccess","allPosts","loadPostFail","loadPostByIdSuccess","postsByIdData","loadPostByUserSuccess","postsByUserData","editPostRequest","postId","newPostText","TextArea","Input","PostInput","postImage","setPostImage","Form","useForm","form","name","layout","onFinish","postContent","postFile","resetFields","console","log","rules","required","placeholder","autoSize","multiple","onDone","base64","shouldUpdate","htmlType","LIKE_POST_START","LIKE_POST_SUCCESS","LIKE_POST_FAIL","LikeSystem","likes","userId","allPostsData","liked","setLiked","likedPosts","PostId","onLikeBtnClick","a","UserId","LikeOutlined","includes","DeleteSystem","history","useHistory","QuestionCircleOutlined","color","onConfirm","deletePostRequest","push","okText","cancelText","DeleteOutlined","PostUsername","EditPost","postText","setNewPostText","onEditPostBtnClick","EditOutlined","value","onChange","e","target","Meta","Card","FeedCard","padding","minHeight","length","sort","x","y","Date","createdAt","getTime","index","cover","alt","src","actions","_id","Likes","CommentOutlined","avatar","AvatarImg","description","moment","format","withRouter","loading","active","paragraph","rows","FeedCardPostDetail","useParams","postById","loadPostByIdStart","PostImg","RollbackOutlined","LOAD_COMMENT_START","LOAD_COMMENT_SUCCESS","LOAD_COMMENT_FAIL","CREATE_COMMENT_REQUEST","DELETE_COMMENT","loadCommentSuccess","allComments","loadCommentFail","createCommentRequest","commentBody","DeleteCommentConfirm","commentId","deleteComment","CommentList","allCommentsData","isAuthState","loadCommentStart","header","itemLayout","dataSource","renderItem","item","author","content","commentContent","datetime","CommentInput","setCommentBody","onCommentBtnClick","disabled","PostDetail","PageNotFound","IconPNF","baseURL","registerRequest","axios","post","password","email","loginRequest","getAuth","get","headers","accessToken","getItem","getUserProfile","updatePassword","newPassword","put","ForgotPassword","usernameInput","setUsernameInput","emailInput","setEmailInput","newPasswordInput","setNewPasswordInput","then","data","prefix","MailOutlined","Password","iconRender","EyeTwoTone","EyeInvisibleOutlined","LockOutlined","LoginPage","setItem","initialValues","remember","RegisterPage","ProfilePage","userProfile","setUserProfile","postByUser","getUserProfilePage","loadPostByUserStart","size","routes","path","isExact","isPrivate","module","Content","LayoutModule","token","renderComponent","marginTop","exact","Footer","App","textAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","deletePostResponse","postReducer","action","commentReducer","authReducer","isLiked","likesReducer","rootReducer","combineReducers","allLikesData","getAllPosts","getPostById","getPostByUser","createPost","deletePost","delete","editPost","createComment","getCommentById","deleteCommentRequest","likesPost","onCreatePostRequest","onLoadPostStartAsync","onLoadPostByIdStartAsync","onLoadPostByUserStartAsync","onDeletePostStart","onEditPostStart","onCreateCommentRequest","onLoadCommentStartAsync","onDeleteComment","onLikePost","onAuthStart","call","allLikesPost","allPostResponse","onPost","onComment","onLike","onAuth","takeEvery","rootSaga","fork","sagaMiddleWare","createSagaMiddleWare","store","createStore","applyMiddleware","run","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.8cd427e5.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  DesktopOutlined,\n  LoginOutlined,\n  // PlayCircleOutlined,\n  UserAddOutlined\n} from '@ant-design/icons';\n\nexport const MenuList = [\n  {\n    id: 'news-feed',\n    label: 'NEWS FEED',\n    icon: <DesktopOutlined />,\n    url: '/'\n  },\n  // {\n  //   id: 'short-videos',\n  //   label: 'SHORT VIDEOS (updating..)',\n  //   icon: <PlayCircleOutlined />,\n  //   url: '/'\n  // }\n]\n\nexport const AuthList = [\n  {\n    id: 'register',\n    label: 'REGISTER',\n    icon: <UserAddOutlined />,\n    url: '/register'\n  },\n  {\n    id: 'login',\n    label: 'LOG IN',\n    icon: <LoginOutlined />,\n    url: '/login'\n  }\n]","export const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\nexport const LOGOUT_USER = 'LOGOUT_USER';\nexport const GET_AUTH_START = 'GET_AUTH_START';\nexport const GET_AUTH_SUCCESS = 'GET_AUTH_SUCCESS';\nexport const GET_AUTH_FAIL = 'GET_AUTH_FAIL';","import {\n  GET_AUTH_FAIL,\n  GET_AUTH_START,\n  GET_AUTH_SUCCESS,\n  LOGIN_USER_SUCCESS, LOGOUT_USER,\n} from './actionTypes';\n\nexport const loginSuccess = (values) => {\n  return {\n    type: LOGIN_USER_SUCCESS,\n    payload: values\n  }\n}\n\nexport const getAuthStart = () => {\n  return {\n    type: GET_AUTH_START\n  }\n}\n\nexport const getAuthSuccess = (values) => {\n  return {\n    type: GET_AUTH_SUCCESS,\n    payload: values\n  }\n}\n\nexport const getAuthError = (error) => {\n  return {\n    type: GET_AUTH_FAIL,\n    payload: error\n  }\n}\n\nexport const logOutSuccess = () => {\n  return {\n    type: LOGOUT_USER\n  }\n}","import React, { useState } from 'react';\nimport { message, Modal } from 'antd';\nimport { logOutSuccess } from '../../store/redux/auth/actions';\nimport { useDispatch } from 'react-redux';\n// import { QuestionCircleOutlined } from '@ant-design/icons';\n\nconst LogOutConfirm = ({username}) => {\n  const dispatch = useDispatch();\n  const [visible, setVisible] = useState(false);\n\n  const confirm = () => {\n    localStorage.removeItem('accessToken');\n    dispatch(logOutSuccess());\n    message.success('See you soon ! 😍');\n  }\n\n  const cancel = () => {\n    message.success('We are happy to see you here 😍');\n    setVisible(false);\n  }\n  return (\n    <>\n      <a className=\"logout-btn\" onClick={() => setVisible(true)}>LOGOUT</a>\n      <Modal\n        title=\"LOGOUT\"\n        visible={visible}\n        onOk={confirm}\n        onCancel={cancel}\n      >\n        <p>You are logging out. Are you sure?</p>\n      </Modal>\n    </>\n    // <Popconfirm\n    //   title=\"You are logging out. Are you sure?\"\n    //   icon={<QuestionCircleOutlined style={{color: 'red'}} />}\n    //   onConfirm={confirm}\n    //   onCancel={cancel}\n    //   okText=\"Yes\"\n    //   cancelText=\"No\"\n    //   placement=\"bottom\"\n    // >\n    //   LOG OUT\n    // </Popconfirm>\n  )\n}\n\nexport default LogOutConfirm;","import React, { useEffect } from 'react';\nimport { Menu } from 'antd';\nimport { Layout } from 'antd';\nimport './navigation.scss';\nimport { AuthList, MenuList } from '../../configs/navigation.config';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAuthStart } from '../../store/redux/auth/actions';\nimport { LogoutOutlined, UserOutlined } from '@ant-design/icons';\nimport LogOutConfirm from '../logOutConfirm';\n\nconst {Header} = Layout;\n\nconst Navigation = () => {\n  const dispatch = useDispatch();\n  const state = useSelector(state => ({...state.isAuth}));\n\n  useEffect(() => {\n    dispatch(getAuthStart());\n  }, [dispatch]);\n\n  return (\n    <Header style={{position: 'fixed', zIndex: 1, width: '100%'}} className=\"header\">\n      <div className=\"logo\">\n        <h1><Link to=\"/\">SOCIAL</Link></h1>\n      </div>\n      <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['news-feed']}>\n        {\n          (state.isLogged && !state.userAuth.error) ? (\n            <>\n              {MenuList.map((val) => {\n                const {id, label, icon, url} = val;\n                return (\n                  <Menu.Item key={id}>\n                    {icon}\n                    <Link to={url}>\n                      {label}\n                    </Link>\n                  </Menu.Item>\n                )\n              })}\n              <Menu.Item key=\"account\">\n                <UserOutlined />\n                <Link to={`/profile/${state.userAuth.id}`}>{state.userAuth.username}</Link>\n              </Menu.Item>\n              <Menu.Item key=\"logout\">\n                <LogoutOutlined />\n                <LogOutConfirm />\n              </Menu.Item>\n            </>\n          ) : AuthList.map((val) => {\n            const {id, label, icon, url} = val;\n            return (\n              <Menu.Item key={id}>\n                {icon}\n                <Link to={url}>\n                  {(id === 'account') ? state.response : label}\n                </Link>\n              </Menu.Item>\n            )\n          })\n        }\n      </Menu>\n    </Header>\n  )\n};\n\nexport default Navigation;","export const LOAD_POST_START = 'LOAD_POST_START';\nexport const LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\nexport const LOAD_POST_FAIL = 'LOAD_POST_FAIL';\n\nexport const LOAD_POST_BY_ID_START = 'LOAD_POST_BY_ID_START';\nexport const LOAD_POST_BY_ID_SUCCESS = 'LOAD_POST_BY_ID_SUCCESS';\nexport const LOAD_POST_BY_ID_FAIL = 'LOAD_POST_BY_ID_FAIL';\n\nexport const LOAD_POST_BY_USER_START = 'LOAD_POST_BY_USER_START';\nexport const LOAD_POST_BY_USER_SUCCESS = 'LOAD_POST_BY_USER_SUCCESS';\nexport const LOAD_POST_BY_USER_FAIL = 'LOAD_POST_BY_USER_FAIL';\n\nexport const CREATE_POST_REQUEST = 'CREATE_POST_REQUEST';\nexport const DELETE_POST_REQUEST = 'DELETE_POST_REQUEST';\nexport const EDIT_POST_REQUEST = 'EDIT_POST_REQUEST';","import {\n  CREATE_POST_REQUEST,\n  DELETE_POST_REQUEST, EDIT_POST_REQUEST,\n  LOAD_POST_BY_ID_FAIL,\n  LOAD_POST_BY_ID_START,\n  LOAD_POST_BY_ID_SUCCESS,\n  LOAD_POST_BY_USER_FAIL,\n  LOAD_POST_BY_USER_START,\n  LOAD_POST_BY_USER_SUCCESS,\n  LOAD_POST_FAIL,\n  LOAD_POST_START,\n  LOAD_POST_SUCCESS\n} from './actionTypes';\n\n//load all post\nexport const loadPostStart = () => {\n  return {\n    type: LOAD_POST_START\n  }\n}\n\nexport const loadPostSuccess = (allPosts) => {\n  return {\n    type: LOAD_POST_SUCCESS,\n    payload: allPosts\n  }\n}\n\nexport const loadPostFail = (error) => {\n  return {\n    type: LOAD_POST_FAIL,\n    payload: error\n  }\n}\n\n//load post by id\nexport const loadPostByIdStart = (postById) => {\n  return {\n    type: LOAD_POST_BY_ID_START,\n    payload: postById\n  }\n}\n\nexport const loadPostByIdSuccess = (postsByIdData) => {\n  return {\n    type: LOAD_POST_BY_ID_SUCCESS,\n    payload: postsByIdData\n  }\n}\n\nexport const loadPostByIdFail = (error) => {\n  return {\n    type: LOAD_POST_BY_ID_FAIL,\n    payload: error\n  }\n}\n\n//load by user\nexport const loadPostByUserStart = (postByUser) => {\n  return {\n    type: LOAD_POST_BY_USER_START,\n    payload: postByUser\n  }\n}\n\nexport const loadPostByUserSuccess = (postsByUserData) => {\n  return {\n    type: LOAD_POST_BY_USER_SUCCESS,\n    payload: postsByUserData\n  }\n}\n\nexport const loadPostByUserFail = (error) => {\n  return {\n    type: LOAD_POST_BY_USER_FAIL,\n    payload: error\n  }\n}\n\nexport const createPostRequest = (postContent, postFile) => {\n  return {\n    type: CREATE_POST_REQUEST,\n    payload: {\n      postContent,\n      postFile\n    }\n  }\n}\n\nexport const deletePostRequest = (postId) => {\n  return {\n    type: DELETE_POST_REQUEST,\n    payload: postId\n  }\n}\n\nexport const editPostRequest = (postId, newPostText) => {\n  return {\n    type: EDIT_POST_REQUEST,\n    payload: {\n      postId,\n      newPostText\n    }\n  }\n}","import React, { useState } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useDispatch } from 'react-redux';\nimport { createPostRequest } from '../../store/redux/posts/actions';\nimport FileBase from 'react-file-base64';\nimport { UploadOutlined } from '@ant-design/icons';\n\nconst {TextArea} = Input;\n\nconst PostInput = ({allPosts}) => {\n    const [postImage, setPostImage] = useState(null);\n    const dispatch = useDispatch();\n    const [form] = Form.useForm();\n\n    const onFinish = (values) => {\n      dispatch(createPostRequest(values, postImage));\n      form.resetFields();\n      console.log(postImage)\n    };\n\n    return (\n      <>\n        {\n          allPosts.allPosts && <Form form={form} name=\"horizontal_login\" layout=\"inline\" onFinish={onFinish}>\n            <Form.Item\n              name=\"postContent\"\n              rules={[\n                {\n                  required: false,\n                  message: 'Please input your post content !',\n                },\n              ]}\n            >\n              <TextArea placeholder=\"What's on your mind ?\" autoSize />\n            </Form.Item>\n            <Form.Item\n              name=\"postFile\"\n              rules={[\n                {\n                  required: false,\n                },\n              ]}\n            >\n              <FileBase name=\"image\" type=\"file\" multiple={false} onDone={({base64}) => setPostImage(base64)} />\n            </Form.Item>\n            <Form.Item shouldUpdate>\n              {() => (\n                <Button\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  // disabled={\n                  //   !form.isFieldsTouched(true) ||\n                  //   !!form.getFieldsError().filter(({errors}) => errors.length).length\n                  // }\n                >\n                  Post\n                </Button>\n              )}\n            </Form.Item>\n          </Form>\n        }\n      </>\n    );\n  }\n;\n\nexport default PostInput;","export default __webpack_public_path__ + \"static/media/8c4ac8c19d21687f3130.3a976e33.png\";","export default __webpack_public_path__ + \"static/media/post-img.7f22c022.jpeg\";","export const LIKE_POST_START = 'LIKE_POST_START';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAIL = 'LIKE_POST_FAIL';\n\n\n\n","import React, { useEffect, useState } from 'react';\nimport { LikeOutlined } from '@ant-design/icons';\nimport { likePostStart } from '../../store/redux/likes/actions';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport './LikeSystem.scss';\n\nconst LikeSystem = ({postId, likes,userId}) => {\n  const dispatch = useDispatch();\n  const state = useSelector(state => ({...state.allPostsData}));\n  const [liked, setLiked] = useState([]);\n  const {allPosts} = state;\n\n  useEffect(() => {\n    allPosts.likedPosts && setLiked(allPosts.likedPosts.map((val) => {\n      return val.PostId;\n    }));\n  }, [dispatch, allPosts]);\n\n  const onLikeBtnClick = async () => {\n    dispatch(likePostStart(postId,userId));\n  }\n\n  return (\n    <>\n      {\n        <LikeOutlined key=\"like\" onClick={onLikeBtnClick}\n                      className={liked.includes(postId) ? 'like-active' : ''}\n        />\n      }\n      {likes}\n    </>\n  )\n};\n\nexport default LikeSystem;","import {\n  LIKE_POST_FAIL,\n  LIKE_POST_START,\n  LIKE_POST_SUCCESS\n} from './actionTypes';\n\nexport const likePostStart = (PostId, UserId) => {\n  return {\n    type: LIKE_POST_START,\n    payload: {\n      PostId,\n      UserId\n    }\n  }\n}\n\nexport const likePostSuccess = (allLikesPost) => {\n  return {\n    type: LIKE_POST_SUCCESS,\n    payload: allLikesPost\n  }\n}\n\nexport const likePostFail = (error) => {\n  return {\n    type: LIKE_POST_FAIL,\n    payload: error\n  }\n}","import React from 'react';\nimport { DeleteOutlined, QuestionCircleOutlined } from '@ant-design/icons';\nimport { useDispatch } from 'react-redux';\nimport { deletePostRequest } from '../../store/redux/posts/actions';\nimport { message, Popconfirm } from 'antd';\nimport { useHistory } from 'react-router-dom';\n\nconst DeleteSystem = ({postId}) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const onDeleteBtnClick = () => {\n    dispatch(deletePostRequest(postId));\n    message.success('Post is deleted ');\n    history.push('/')\n  }\n\n  return (\n    <Popconfirm\n      title=\"Are you sure？\"\n      icon={<QuestionCircleOutlined style={{color: 'red'}} />}\n      onConfirm={onDeleteBtnClick}\n      okText=\"Yes\"\n      cancelText=\"No\"\n    >\n      <DeleteOutlined key=\"delete\" />\n    </Popconfirm>\n  );\n};\n\nexport default DeleteSystem;","import React from 'react';\n\nimport './PostUsename.scss';\nimport { useHistory } from 'react-router-dom';\n\nconst PostUsername = ({username, userId}) => {\n  const history = useHistory();\n\n  const onShowProfilePageBtn = () => {\n    history.push(`/profile/${userId}`);\n  }\n\n  return (\n    <div className=\"username-hover\" onClick={onShowProfilePageBtn}>\n      {username}\n    </div>\n  );\n};\n\nexport default PostUsername;","import React, { useState } from 'react';\nimport { EditOutlined } from '@ant-design/icons';\nimport { Input, Modal } from 'antd'\nimport { useDispatch } from 'react-redux';\nimport { editPostRequest } from '../../store/redux/posts/actions';\n\nconst EditPost = ({postId, postText}) => {\n  const [visible, setVisible] = useState(false);\n  const [newPostText, setNewPostText] = useState(postText);\n  const dispatch = useDispatch();\n\n  const onShowModalBtnClick = () => {\n    setVisible(true);\n  }\n\n  const onEditPostBtnClick = async () => {\n    dispatch(editPostRequest(postId, newPostText));\n    setVisible(false)\n  }\n\n  return (\n    <>\n      <EditOutlined key=\"edit\" onClick={onShowModalBtnClick} />\n      <Modal\n        title=\"Edit post\"\n        visible={visible}\n        onOk={onEditPostBtnClick}\n        onCancel={() => {\n          setVisible(false)\n        }}\n      >\n        <Input value={newPostText} onChange={(e) => {\n          setNewPostText(e.target.value)\n        }} />\n      </Modal>\n    </>\n  );\n};\n\nexport default EditPost;","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Card, Avatar, Empty } from 'antd';\nimport {\n  CommentOutlined\n} from '@ant-design/icons';\nimport moment from 'moment';\nimport AvatarImg from '../../assets/8c4ac8c19d21687f3130.png';\nimport PostImg from '../../assets/post-img.jpeg';\n\nimport './FeedCard.scss';\nimport LikeSystem from '../likeSystem';\nimport DeleteSystem from '../deleteSystem';\nimport { useSelector } from 'react-redux';\nimport PostUsername from '../postUsername';\nimport EditPost from '../editPost';\n\nconst {Meta} = Card;\n\nconst FeedCard = ({allPosts}) => {\n  let history = useHistory();\n  const isAuth = useSelector(state => ({...state.isAuth}));\n  console.log(allPosts)\n\n  return (\n    <div className=\"feed-container\" style={{padding: 24, minHeight: 380}}>\n      {\n        (allPosts && allPosts.length > 0) ? allPosts.sort((x, y) => new Date(y.createdAt).getTime() - new Date(x.createdAt).getTime())\n          .map((val, index) => {\n            return (\n              <Card\n                style={{width: 400}}\n                key={index}\n                cover={\n                  <img alt=\"example\" src={val.postFile}\n                  />\n                }\n                actions={\n                  val.username === isAuth.userAuth.username ?\n                    [\n                      <LikeSystem postId={val._id} likes={val.Likes && val.Likes.length} />,\n                      <CommentOutlined key=\"comment\" onClick={() => {\n                        history.push(`/posts/${val._id}`)\n                      }} />,\n                      <EditPost postText={val.postText} postId={val._id} />,\n                      <DeleteSystem postId={val._id} />\n                    ] : [\n                      <LikeSystem postId={val._id} likes={val.Likes && val.Likes.length} userId={val.UserId} />,\n                      <CommentOutlined key=\"comment\" onClick={() => {\n                        history.push(`/posts/${val._id}`)\n                      }} />\n                    ]\n                }>\n                <Meta\n                  avatar={<Avatar src={AvatarImg} />}\n                  title={<PostUsername username={val.username} userId={val.UserId} />}\n                  description={`${moment(val.createdAt).format('DD/MM/YYYY - HH:mm')}: ${val.postText}`}\n                />\n              </Card>\n            )\n          }) : <Empty />\n      }\n    </div>\n  );\n}\n\nexport default FeedCard;","import React, { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadPostStart } from '../../store/redux/posts/actions';\nimport PostInput from '../../components/postInput';\nimport FeedCard from '../../components/feedCard';\nimport { Skeleton } from 'antd';\n\nimport './Homepage.scss';\n\nconst Homepage = () => {\n  const dispatch = useDispatch();\n  const state = useSelector(state => ({...state.allPostsData}));\n  const {allPosts} = state;\n\n  useEffect(() => {\n    dispatch(loadPostStart());\n  }, [dispatch]);\n\n  return (\n    <div className=\"homepage\">\n      <div className=\"create-post\">\n        <PostInput allPosts={allPosts} />\n      </div>\n      <div className=\"news-feed\">\n        {state.loading ? <Skeleton active avatar paragraph={{rows: 10}} /> :\n          <FeedCard allPosts={allPosts.allPosts} />}\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(Homepage);\n","import React, { useEffect } from 'react';\nimport { Card, Avatar } from 'antd';\nimport moment from 'moment';\nimport { useHistory, useParams } from 'react-router-dom';\nimport AvatarImg from '../../assets/8c4ac8c19d21687f3130.png';\nimport PostImg from '../../assets/post-img.jpeg';\nimport LikeSystem from '../likeSystem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadPostByIdStart } from '../../store/redux/posts/actions';\nimport DeleteSystem from '../deleteSystem';\nimport { RollbackOutlined } from '@ant-design/icons';\nimport EditPost from '../editPost';\nimport PostUsername from '../postUsername';\n\nconst {Meta} = Card;\n\nconst FeedCardPostDetail = () => {\n  let {id} = useParams();\n  const state = useSelector(state => ({...state.allPostsData}));\n  const isAuth = useSelector(state => ({...state.isAuth}));\n  const {postById} = state;\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(loadPostByIdStart(id));\n  }, [id, dispatch]);\n\n  return (\n    <div style={{padding: '24px 0', minHeight: 380}}>\n      {\n        postById.map((val) => (\n          <Card\n            style={{width: '100%'}}\n            key={val._id}\n            cover={\n              <img\n                alt=\"example\"\n                src={PostImg}\n              />\n            }\n            actions={\n              val.username === isAuth.userAuth.username ?\n                [\n                  <LikeSystem postId={val._id} likes={val.Likes && val.Likes.length} />,\n                  <DeleteSystem postId={val._id} />,\n                  <EditPost postId={val._id} postText={val.postText} />,\n                  <RollbackOutlined key=\"roll-back\" onClick={() => {\n                    history.push('/')\n                  }} />\n                ] : [\n                  <LikeSystem postId={val._id} likes={val.Likes && val.Likes.length} />,\n                  <RollbackOutlined key=\"roll-back\" onClick={() => {\n                    history.push('/')\n                  }} />\n                ]\n            }\n          >\n            <Meta\n              avatar={<Avatar src={AvatarImg} />}\n              title={<PostUsername username={val.username} userId={val.UserId} />}\n              description={`${moment(val.createdAt).format('DD/MM/YYYY - HH:mm')}: ${val.postText}`}\n            />\n          </Card>\n        ))\n      }\n    </div>\n  );\n};\n\nexport default FeedCardPostDetail;","export const LOAD_COMMENT_START = 'LOAD_COMMENT_START';\nexport const LOAD_COMMENT_SUCCESS = 'LOAD_COMMENT_SUCCESS';\nexport const LOAD_COMMENT_FAIL = 'LOAD_COMMENT_FAIL';\nexport const CREATE_COMMENT_REQUEST = 'CREATE_COMMENT_REQUEST';\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\n\n","import {\n  CREATE_COMMENT_REQUEST, DELETE_COMMENT,\n  LOAD_COMMENT_FAIL,\n  LOAD_COMMENT_START,\n  LOAD_COMMENT_SUCCESS\n} from './actionTypes';\n\nexport const loadCommentStart = (id) => {\n  return {\n    type: LOAD_COMMENT_START,\n    payload: id\n  }\n}\n\nexport const loadCommentSuccess = (allComments) => {\n  return {\n    type: LOAD_COMMENT_SUCCESS,\n    payload: allComments\n  }\n}\n\nexport const loadCommentFail = (error) => {\n  return {\n    type: LOAD_COMMENT_FAIL,\n    payload: error\n  }\n}\n\nexport const createCommentRequest = (id, commentBody) => {\n  return {\n    type: CREATE_COMMENT_REQUEST,\n    payload: {\n      id,\n      commentBody\n    }\n  }\n}\n\nexport const deleteComment = (id, commentId) => {\n  return {\n    type: DELETE_COMMENT,\n    payload: {\n      id,\n      commentId\n    }\n  }\n}","import React from 'react';\nimport { Popconfirm } from 'antd';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport { useDispatch } from 'react-redux';\nimport { deleteComment } from '../../store/redux/comments/actions';\nimport { useParams } from 'react-router-dom';\n\nconst DeleteCommentConfirm = ({commentId}) => {\n  const {id} = useParams();\n  const dispatch = useDispatch();\n\n  const confirm = () => {\n    dispatch(deleteComment(id, commentId));\n  }\n\n  return (\n    <Popconfirm\n      title=\"Are you sure？\"\n      icon={<QuestionCircleOutlined style={{color: 'red'}} />}\n      onConfirm={confirm}\n      okText=\"Yes\"\n      cancelText=\"No\"\n    >\n      Delete\n    </Popconfirm>\n  );\n}\n\nexport default DeleteCommentConfirm;","import React, { useEffect } from 'react';\nimport { Comment, List } from 'antd';\nimport moment from 'moment';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadCommentStart } from '../../store/redux/comments/actions';\nimport DeleteCommentConfirm from '../deleteCommentConfirm';\n\nconst CommentList = () => {\n  const {id} = useParams();\n  const dispatch = useDispatch();\n  const state = useSelector(state => ({...state.allCommentsData}));\n  const isAuthState = useSelector(state => ({...state.isAuth}));\n\n  useEffect(() => {\n    dispatch(loadCommentStart(id))\n  }, [dispatch, id]);\n\n  return (\n    <List\n      className=\"comment-list\"\n      header={`${state.allComments.length} repl${(state.allComments.length > 1) ? 'ies' : 'y'}`}\n      itemLayout=\"horizontal\"\n      dataSource={state.allComments}\n      renderItem={item => (\n        <li>\n          <Comment\n            actions={(isAuthState.userAuth.username === item.username) ?\n              [<DeleteCommentConfirm commentId={item._id} />] : ''}\n            author={item.username}\n            content={item.commentContent}\n            datetime={moment(item.createdAt).format('DD/MM/YYYY - HH:mm')}\n          />\n        </li>\n      )}\n    />\n  )\n};\n\nexport default CommentList;","import React, { useState } from 'react';\nimport { Input, Button, Form } from 'antd';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { createCommentRequest } from '../../store/redux/comments/actions';\n\nconst {TextArea} = Input;\n\nconst CommentInput = () => {\n  let {id} = useParams();\n  const dispatch = useDispatch();\n  const [commentBody, setCommentBody] = useState('');\n\n  const onCommentBtnClick = async () => {\n    dispatch(createCommentRequest(id, commentBody));\n    setCommentBody('');\n  }\n\n  return (\n    <>\n      <Form.Item>\n        <TextArea autoSize value={commentBody} onChange={(e) => setCommentBody(e.target.value)} />\n      </Form.Item>\n      <Form.Item>\n        <Button htmlType=\"submit\" type=\"primary\" disabled={(commentBody === '') ? true : false}\n                onClick={onCommentBtnClick}>\n          Comment\n        </Button>\n      </Form.Item>\n    </>\n  )\n}\n\nexport default CommentInput;","import React from 'react';\nimport FeedCardPostDetail from '../../components/feedCardPostDetail';\nimport CommentList from '../../components/comment';\nimport CommentInput from '../../components/commentInput';\n\nimport './PostDetail.scss';\n\nconst PostDetail = () => {\n  return (\n    <div className=\"post-container\">\n      <div className=\"post-header\">\n        <FeedCardPostDetail />\n      </div>\n      <div className=\"post-content\">\n        <div className=\"comment-input\">\n          <CommentInput />\n        </div>\n        <div className=\"comment-list\">\n          <CommentList />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PostDetail;","export default __webpack_public_path__ + \"static/media/page-not-found.32aeed80.png\";","import React from 'react';\nimport IconPNF from '../../assets/page-not-found.png';\nimport { Button } from 'antd';\n\nimport './PageNotFound.scss'\nimport { Link } from 'react-router-dom';\n\nconst PageNotFound = () => {\n  return (\n    <div className=\"page-not-found\">\n      <img src={IconPNF} alt=\"page-not-found\" />\n      <h3>OOPS !!</h3>\n      <h2>PAGE NOT FOUND</h2>\n      <Button type=\"primary\" htmlType=\"submit\"><Link to=\"/\">Come back home page</Link></Button>\n    </div>\n  )\n}\n\nexport default PageNotFound;","import axios from 'axios';\n\nconst baseURL = 'https://social-app-lnt.herokuapp.com/auth';\n\nexport const registerRequest = async (values) => {\n  return axios.post(baseURL, {\n    username: values.username,\n    password: values.password,\n    email: values.email\n  })\n};\n\nexport const loginRequest = async (values) => {\n  return axios.post(`${baseURL}/login`, {\n    username: values.username,\n    password: values.password\n  })\n};\n\nexport const getAuth = async () => {\n  return axios.get(`${baseURL}/auth-user`, {\n    headers: {\n      accessToken: localStorage.getItem('accessToken')\n    }\n  })\n};\n\nexport const getUserProfile = async (id) => {\n  return axios.get(`${baseURL}/profile/${id}`);\n};\n\nexport const updatePassword = async (email, username, newPassword) => {\n  return axios.put(`${baseURL}/change-password`, {\n    email: email,\n    username: username,\n    password: newPassword\n  });\n};","import React, { useState } from 'react';\nimport { Form, Input, message, Modal } from 'antd';\nimport { EyeInvisibleOutlined, EyeTwoTone, LockOutlined, MailOutlined, UserOutlined } from '@ant-design/icons';\nimport { updatePassword } from '../../network/services/auth';\n\nimport './ForgotPassword.scss';\n\nconst ForgotPassword = () => {\n  const [visible, setVisible] = useState(false);\n  const [usernameInput, setUsernameInput] = useState('');\n  const [emailInput, setEmailInput] = useState('');\n  const [newPasswordInput, setNewPasswordInput] = useState('');\n\n  const onShowModalBtnClick = () => {\n    setVisible(true);\n  }\n\n  const onEditPostBtnClick = async () => {\n    await updatePassword(emailInput, usernameInput, newPasswordInput).then((response) => {\n      const {data} = response;\n      if (data.error) {\n        message.error(data.error);\n      } else {\n        message.success(data);\n        setVisible(false);\n      }\n    })\n  }\n\n  return (\n    <>\n      <p className=\"login-form-forgot\" onClick={onShowModalBtnClick}>Forgot password</p>\n      <Modal\n        title=\"Forgot password\"\n        visible={visible}\n        onOk={onEditPostBtnClick}\n        onCancel={() => {\n          setVisible(false)\n        }}\n      >\n        <Form\n          name=\"normal_update_password\"\n          className=\"forgot-pass-form\"\n        >\n          <Form.Item\n            name=\"email\"\n            rules={[\n              {\n                type: 'email',\n                required: true,\n                message: 'Please input your Email!',\n              },\n            ]}\n          >\n            <Input\n              prefix={<MailOutlined\n                className=\"site-form-item-icon\" />}\n              placeholder=\"Email\"\n              onChange={(e) => {\n                setEmailInput(e.target.value)\n              }} />\n          </Form.Item>\n          <Form.Item\n            name=\"username\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your Username!',\n              },\n            ]}\n          >\n            <Input\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Username\"\n              onChange={(e) => {\n                setUsernameInput(e.target.value)\n              }} />\n          </Form.Item>\n          <Form.Item\n            name=\"password\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your New Password!',\n              },\n            ]}\n          >\n            <Input.Password\n              iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\n              type=\"password\"\n              placeholder=\"New password\"\n              onChange={(e) => {\n                setNewPasswordInput(e.target.value)\n              }} />\n          </Form.Item>\n        </Form>\n      </Modal>\n    </>\n  );\n};\n\nexport default ForgotPassword;","import React from 'react';\nimport { Form, Input, Button, message } from 'antd';\nimport { UserOutlined, LockOutlined, EyeTwoTone, EyeInvisibleOutlined } from '@ant-design/icons';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { loginRequest } from '../../network/services/auth';\nimport { getAuthStart, loginSuccess } from '../../store/redux/auth/actions';\n\nimport './Auth.scss';\nimport ForgotPassword from '../../components/forgotPassword';\n\nexport const LoginPage = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const onFinish = async (values) => {\n    await loginRequest(values).then((response) => {\n      const {data} = response;\n      if (data.error) {\n        message.error(data.error);\n      } else {\n        localStorage.setItem('accessToken', data.accessToken);\n        dispatch(loginSuccess(data));\n        dispatch(getAuthStart());\n        history.push('/');\n      }\n    })\n  };\n\n  return (\n    <>\n      <Form\n        name=\"normal_login\"\n        className=\"login-form\"\n        initialValues={{\n          remember: true,\n        }}\n        onFinish={onFinish}\n      >\n        <h2>LOG IN</h2>\n        <Form.Item\n          name=\"username\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input your Username!',\n            },\n          ]}\n        >\n          <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input your Password!',\n            },\n          ]}\n          className=\"margin-bottom-pass\"\n        >\n          <Input.Password\n            iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n        </Form.Item>\n        <Form.Item>\n          <ForgotPassword />\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n            Log in\n          </Button>\n          Or <Link to=\"/register\">Register now!</Link>\n        </Form.Item>\n      </Form>\n    </>\n  );\n}","import React from 'react';\nimport { Button, Form, Input, message } from 'antd';\nimport { EyeInvisibleOutlined, EyeTwoTone, LockOutlined, MailOutlined, UserOutlined } from '@ant-design/icons';\nimport { Link, useHistory } from 'react-router-dom';\nimport { registerRequest } from '../../network/services/auth';\n\nexport const RegisterPage = () => {\n  const history = useHistory();\n\n  const onFinish = async (values) => {\n    await registerRequest(values).then((response) => {\n      const {data} = response;\n      if (data.error) {\n        message.error(data.error);\n      } else {\n        message.success(data);\n        history.push('/login');\n      }\n    })\n  };\n\n  return (\n    <Form\n      name=\"normal_login\"\n      className=\"login-form\"\n      onFinish={onFinish}\n    >\n      <h2>SIGN UP</h2>\n      <Form.Item\n        name=\"email\"\n        rules={[\n          {\n            type: 'email',\n            required: true,\n            message: 'Please input your Email!',\n          },\n        ]}\n      >\n        <Input prefix={<MailOutlined className=\"site-form-item-icon\" />} placeholder=\"Email\" />\n      </Form.Item>\n      <Form.Item\n        name=\"username\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your Username!',\n          },\n        ]}\n      >\n        <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\n      </Form.Item>\n      <Form.Item\n        name=\"password\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your Password!',\n          },\n        ]}\n      >\n        <Input.Password\n          iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\n          prefix={<LockOutlined className=\"site-form-item-icon\" />}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n          Sign up\n        </Button>\n        Or <Link to=\"/login\">Login now!</Link>\n      </Form.Item>\n    </Form>\n  )\n}","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getUserProfile } from \"../../network/services/auth\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  loadPostByUserStart,\n  loadPostStart,\n} from \"../../store/redux/posts/actions\";\nimport { Divider } from 'antd';\nimport FeedCard from \"../../components/feedCard\";\nimport { Avatar } from \"antd\";\nimport AvatarImg from \"../../assets/8c4ac8c19d21687f3130.png\";\n\n\nimport \"./ProfilePage.scss\";\n\nconst ProfilePage = () => {\n  let { id } = useParams();\n  const dispatch = useDispatch();\n  const [userProfile, setUserProfile] = useState([]);\n  const state = useSelector((state) => ({ ...state.allPostsData }));\n  const { postByUser } = state;\n\n  useEffect(() => {\n    const getUserProfilePage = async () => {\n      await getUserProfile(id).then((response) => {\n        setUserProfile(response.data);\n      });\n    };\n    getUserProfilePage();\n\n    dispatch(loadPostByUserStart(id));\n    dispatch(loadPostStart());\n  }, [dispatch, id]);\n\n  return (\n    <div className='profile-page'>\n      <div className='user-header'>\n        <Avatar size='large' src={AvatarImg} />\n        <h2>{userProfile.username}</h2>\n      </div>\n      <Divider />\n      <div className='user-posts'>\n        <FeedCard allPosts={postByUser} />\n      </div>\n    </div>\n  );\n};\n\nexport default ProfilePage;\n","import Homepage from '../module/homepage';\nimport PostDetail from '../module/postDetail';\nimport PageNotFound from '../module/pageNotFound';\nimport { LoginPage } from '../module/auth/LoginPage';\nimport { RegisterPage } from '../module/auth/RegisterPage';\nimport ProfilePage from '../module/profilePage';\n\nexport const routes = [\n  {\n    path: '/',\n    isExact: true,\n    isPrivate: true,\n    module: <Homepage />\n  },\n  {\n    path: '/login',\n    isExact: true,\n    module: <LoginPage />\n  },\n  {\n    path: '/register',\n    isExact: true,\n    module: <RegisterPage />\n  },\n  {\n    path: '/posts/:id',\n    isPrivate: true,\n    isExact: true,\n    module: <PostDetail />\n  },\n  {\n    path: '/profile/:id',\n    isPrivate: true,\n    isExact: true,\n    module: <ProfilePage />\n  },\n  {\n    path: '*',\n    isExact: true,\n    module: <PageNotFound />\n  }\n];","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { routes } from '../../configs/router.config';\n\n//import layout antd\nimport { Layout } from 'antd';\nimport { useSelector } from 'react-redux';\n\nconst {Content} = Layout;\n\nconst LayoutModule = () => {\n  const token = localStorage.getItem('accessToken');\n  const state = useSelector(state => ({...state.isAuth}));\n\n  const renderComponent = (module, isPrivate, token, isLogged) => () => {\n    if (isPrivate) {\n      return (token || isLogged) ? module : <Redirect to=\"/login\" />\n    }\n    return module;\n  }\n\n  return (\n    <Content className=\"site-layout content\" style={{padding: '0 50px', marginTop: 64}}>\n      <Switch>\n        {\n          routes.map((val, index) => {\n            const {path, isExact, module, isPrivate} = val;\n            return (\n              <Route key={index} path={path} exact={isExact}>\n                {renderComponent(module, isPrivate, token, state.isLogged)}\n              </Route>\n            )\n          })\n        }\n      </Switch>\n    </Content>\n  )\n}\n\nexport default LayoutModule;","import React from 'react';\nimport Navigation from \"./components/navigation\";\nimport LayoutModule from \"./components/layoutModule\";\n\n//import styles\nimport './scss/App.scss';\nimport './scss/rwd.scss';\nimport 'antd/dist/antd.css';\n\n//import layout antd\nimport { Layout } from 'antd';\n\nconst {Footer} = Layout;\n\nfunction  App() {\n  return (\n    <Layout className=\"layout\">\n      <Navigation />\n      <LayoutModule />\n      <Footer style={{textAlign: 'center'}}>Social ©2021 Created by Nhan LNT</Footer>\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  LOAD_POST_BY_ID_FAIL,\n  LOAD_POST_BY_ID_START,\n  LOAD_POST_BY_ID_SUCCESS,\n  LOAD_POST_BY_USER_FAIL,\n  LOAD_POST_BY_USER_START,\n  LOAD_POST_BY_USER_SUCCESS,\n  LOAD_POST_FAIL,\n  LOAD_POST_START,\n  LOAD_POST_SUCCESS\n} from './actionTypes';\n\nconst initialState = {\n  loading: false,\n  allPosts: [],\n  postById: [],\n  postByUser: [],\n  deletePostResponse: '',\n  error: null\n}\n\nconst postReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_POST_START:\n      return {\n        ...state,\n        loading: true\n      }\n    case LOAD_POST_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        allPosts: action.payload\n      }\n    case LOAD_POST_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      }\n    case LOAD_POST_BY_ID_START:\n      return {\n        ...state,\n        loading: true\n      }\n    case LOAD_POST_BY_ID_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        postById: action.payload\n      }\n    case LOAD_POST_BY_ID_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      }\n    case LOAD_POST_BY_USER_START:\n      return {\n        ...state,\n        loading: true\n      }\n    case LOAD_POST_BY_USER_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        postByUser: action.payload\n      }\n    case LOAD_POST_BY_USER_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      }\n    default:\n      return state;\n  }\n}\n\nexport default postReducer;","import { LOAD_COMMENT_FAIL, LOAD_COMMENT_START, LOAD_COMMENT_SUCCESS } from './actionTypes';\n\nconst initialState = {\n  loading: false,\n  allComments: [],\n  error: null\n}\n\nconst commentReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_COMMENT_START:\n      return {\n        ...state,\n        loading: true\n      }\n    case LOAD_COMMENT_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        allComments: action.payload\n      }\n    case LOAD_COMMENT_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      }\n    default:\n      return state;\n  }\n}\n\nexport default commentReducer;","import {\n  GET_AUTH_FAIL,\n  GET_AUTH_START,\n  GET_AUTH_SUCCESS,\n  LOGIN_USER_SUCCESS, LOGOUT_USER,\n} from './actionTypes';\n\nconst initialState = {\n  loading: false,\n  isLogged: false,\n  response: '',\n  userAuth: '',\n  error: null\n}\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN_USER_SUCCESS:\n      return {\n        ...state,\n        isLogged: true,\n        response: action.payload\n      }\n    case GET_AUTH_START:\n      return {\n        ...state,\n        loading: true\n      }\n    case GET_AUTH_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        isLogged: true,\n        userAuth: action.payload\n      }\n    case GET_AUTH_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      }\n    case LOGOUT_USER:\n      return {\n        ...state,\n        isLogged: false\n      }\n    default:\n      return state;\n  }\n}\n\nexport default authReducer;","import {\n  LIKE_POST_FAIL,\n  LIKE_POST_START,\n  LIKE_POST_SUCCESS\n} from './actionTypes';\n\nconst initialState = {\n  loading: false,\n  isLiked: [],\n  error: null\n}\n\nconst likesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LIKE_POST_START:\n      return {\n        ...state,\n        loading: true\n      }\n    case LIKE_POST_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        isLiked: action.payload\n      }\n    case LIKE_POST_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      }\n    default:\n      return state\n  }\n};\n\nexport default likesReducer;","import { combineReducers } from 'redux';\nimport postReducer from './redux/posts';\nimport commentReducer from './redux/comments';\nimport authReducer from './redux/auth';\nimport likesReducer from './redux/likes';\n\nconst rootReducer = combineReducers({\n  allPostsData: postReducer,\n  allCommentsData: commentReducer,\n  isAuth: authReducer,\n  allLikesData: likesReducer\n});\n\nexport default rootReducer;","import axios from 'axios';\nimport { message } from 'antd';\n\nconst baseURL = 'https://social-app-lnt.herokuapp.com/posts';\n\nexport const getAllPosts = async () => {\n  return axios.get(baseURL, {\n    headers: {\n      accessToken: localStorage.getItem('accessToken')\n    }\n  }).then((response) => {\n    const {data} = response;\n    if (data.error) {\n      message.error('You need to Sig Up/Log In 👏');\n    } else {\n      return response\n    }\n  });\n};\n\nexport const getPostById = async (id) => {\n  return await axios.get(`${baseURL}/post-by-id/${id}`);\n};\n\nexport const getPostByUser = async (id) => {\n  return await axios.get(`${baseURL}/post-by-user/${id}`);\n};\n\nexport const createPost = async (values, postImage) => {\n  return await axios.post(baseURL, {\n    postText: values.postContent,\n    postFile: postImage\n  }, {\n    headers: {\n      accessToken: localStorage.getItem('accessToken')\n    }\n  })\n};\n\nexport const deletePost = async (postId) => {\n  return await axios.delete(`${baseURL}/${postId}`, {\n    headers: {\n      accessToken: localStorage.getItem('accessToken')\n    }\n  })\n}\n\nexport const editPost = async (newPostText, postId) => {\n  return await axios.put(`${baseURL}/edit-post`, {\n    newPostText: newPostText,\n    id: postId\n  }, {\n    headers: {\n      accessToken: localStorage.getItem('accessToken')\n    }\n  }).then((response) => {\n    message.success('Post edited 👍');\n    return response;\n  })\n}","import axios from 'axios';\nimport { message } from 'antd';\n\nconst baseURL = 'https://social-app-lnt.herokuapp.com/comments';\n\nexport const createComment = async (id, commentBody) => {\n  return axios.post(baseURL, {\n    commentContent: commentBody,\n    PostId: id\n  }, {\n    headers: {\n      accessToken: localStorage.getItem('accessToken')\n    }\n  }).then((response) => {\n    const {data} = response;\n    if (data.error) {\n      message.error('You need to login');\n    } else {\n      return response\n    }\n  });\n}\n\nexport const getCommentById = async (id) => {\n  return axios.get(`${baseURL}/${id}`);\n}\n\nexport const deleteCommentRequest = async (id) => {\n  return axios.delete(`${baseURL}/${id}`, {\n    headers: {\n      accessToken: localStorage.getItem('accessToken')\n    }\n  });\n}","import axios from 'axios';\n\nconst baseURL = 'https://social-app-lnt.herokuapp.com/likes';\n\nexport const likesPost = async (postId) => {\n  return await axios.post(baseURL, {\n    PostId: postId\n  }, {\n    headers: {\n      accessToken: localStorage.getItem('accessToken')\n    }\n  })\n};","import { call, put } from 'redux-saga/effects';\nimport { createPost, deletePost, editPost, getAllPosts, getPostById, getPostByUser } from '../../network/services/post';\nimport {\n  loadPostByIdSuccess,\n  loadPostByUserFail,\n  loadPostByUserSuccess,\n  loadPostFail,\n  loadPostSuccess\n} from '../redux/posts/actions';\nimport { createComment, getCommentById, deleteCommentRequest } from '../../network/services/comment';\nimport { loadCommentFail, loadCommentSuccess } from '../redux/comments/actions';\nimport { likePostFail, likePostSuccess } from '../redux/likes/actions';\nimport { likesPost } from '../../network/services/likesPost';\nimport { getAuth } from '../../network/services/auth';\nimport { getAuthError, getAuthSuccess } from '../redux/auth/actions';\n\n//post\nexport function* onCreatePostRequest(action) {\n  try {\n    yield call(createPost, action.payload.postContent, action.payload.postFile);\n    const response = yield call(getAllPosts);\n    yield put(loadPostSuccess(response.data));\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function* onLoadPostStartAsync() {\n  try {\n    const response = yield call(getAllPosts);\n    yield put(loadPostSuccess(response.data));\n  } catch (error) {\n    yield put(loadPostFail(error));\n  }\n}\n\nexport function* onLoadPostByIdStartAsync(action) {\n  try {\n    const response = yield call(getPostById, action.payload);\n    yield put(loadPostByIdSuccess(response.data));\n  } catch (error) {\n    yield put(loadPostFail(error));\n  }\n}\n\nexport function* onLoadPostByUserStartAsync(action) {\n  try {\n    const response = yield call(getPostByUser, action.payload);\n    yield put(loadPostByUserSuccess(response.data));\n  } catch (error) {\n    yield put(loadPostByUserFail(error));\n  }\n}\n\nexport function* onDeletePostStart(action) {\n  try {\n    yield call(deletePost, action.payload);\n\n    const response = yield call(getAllPosts);\n    yield put(loadPostSuccess(response.data));\n\n    const postById = yield call(getPostById, action.payload);\n    yield put(loadPostByIdSuccess(postById.data));\n  } catch (error) {\n    yield put(loadPostFail(error));\n  }\n}\n\nexport function* onEditPostStart(action) {\n  try {\n    yield call(editPost, action.payload.newPostText, action.payload.postId);\n\n    const response = yield call(getAllPosts);\n    yield put(loadPostSuccess(response.data));\n\n    const postById = yield call(getPostById, action.payload.postId);\n    yield put(loadPostByIdSuccess(postById.data));\n  } catch (error) {\n    yield put(loadPostFail(error));\n  }\n}\n\n//comment\nexport function* onCreateCommentRequest(action) {\n  try {\n    yield call(createComment, action.payload.id, action.payload.commentBody)\n    const response = yield call(getCommentById, action.payload.id);\n    yield put(loadCommentSuccess(response.data));\n  } catch (error) {\n    yield put(loadCommentFail(error))\n  }\n}\n\nexport function* onLoadCommentStartAsync(action) {\n  try {\n    const response = yield call(getCommentById, action.payload);\n    yield put(loadCommentSuccess(response.data));\n  } catch (error) {\n    yield put(loadCommentFail(error));\n  }\n}\n\nexport function* onDeleteComment(action) {\n  try {\n    yield call(deleteCommentRequest, action.payload.commentId);\n    const response = yield call(getCommentById, action.payload.id);\n    yield put(loadCommentSuccess(response.data));\n  } catch (error) {\n    yield put(loadCommentFail(error));\n  }\n}\n\n//like system\nexport function* onLikePost(action) {\n  try {\n    const response = yield call(likesPost, action.payload.PostId);\n    yield put(likePostSuccess(response.data));\n\n    const allPostResponse = yield call(getAllPosts);\n    yield put(loadPostSuccess(allPostResponse.data));\n\n    const postById = yield call(getPostById, action.payload.PostId);\n    yield put(loadPostByIdSuccess(postById.data));\n\n    const postByUser = yield call(getPostByUser, action.payload.UserId);\n    yield put(loadPostByUserSuccess(postByUser.data));\n  } catch (error) {\n    yield put(likePostFail(error));\n  }\n}\n\n//auth\nexport function* onAuthStart() {\n  try {\n    const response = yield call(getAuth);\n    yield put(getAuthSuccess(response.data));\n  } catch (error) {\n    yield put(getAuthError(error));\n  }\n}","import { takeEvery } from 'redux-saga/effects';\nimport {\n  CREATE_POST_REQUEST,\n  DELETE_POST_REQUEST, EDIT_POST_REQUEST,\n  LOAD_POST_BY_ID_START, LOAD_POST_BY_USER_START,\n  LOAD_POST_START\n} from '../redux/posts/actionTypes';\nimport {\n  onAuthStart,\n  onCreateCommentRequest,\n  onCreatePostRequest, onDeleteComment, onDeletePostStart, onEditPostStart, onLikePost,\n  onLoadCommentStartAsync, onLoadPostByIdStartAsync, onLoadPostByUserStartAsync,\n  onLoadPostStartAsync\n} from './requestSaga';\nimport { CREATE_COMMENT_REQUEST, DELETE_COMMENT, LOAD_COMMENT_START } from '../redux/comments/actionTypes';\nimport { LIKE_POST_START } from '../redux/likes/actionTypes';\nimport { GET_AUTH_START } from '../redux/auth/actionTypes';\n\nexport function* onPost() {\n  yield takeEvery(CREATE_POST_REQUEST, onCreatePostRequest);\n  yield takeEvery(LOAD_POST_START, onLoadPostStartAsync);\n  yield takeEvery(LOAD_POST_BY_ID_START, onLoadPostByIdStartAsync);\n  yield takeEvery(LOAD_POST_BY_USER_START, onLoadPostByUserStartAsync);\n  yield takeEvery(DELETE_POST_REQUEST, onDeletePostStart);\n  yield takeEvery(EDIT_POST_REQUEST, onEditPostStart);\n}\n\nexport function* onComment() {\n  yield takeEvery(CREATE_COMMENT_REQUEST, onCreateCommentRequest);\n  yield takeEvery(LOAD_COMMENT_START, onLoadCommentStartAsync);\n  yield takeEvery(DELETE_COMMENT, onDeleteComment);\n}\n\nexport function* onLike() {\n  yield takeEvery(LIKE_POST_START, onLikePost);\n}\n\nexport function* onAuth() {\n  yield takeEvery(GET_AUTH_START, onAuthStart);\n}","import { fork } from 'redux-saga/effects';\nimport { onAuth, onComment, onLike, onPost } from './handlerSaga';\n\nfunction* rootSaga() {\n  yield fork(onPost)\n  yield fork(onComment)\n  yield fork(onLike)\n  yield fork(onAuth)\n}\n\nexport default rootSaga;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\nimport createSagaMiddleWare from 'redux-saga';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, createStore } from 'redux';\nimport rootReducer from './store/rootReducer';\nimport rootSaga from './store/sagas/rootSaga';\n\nconst sagaMiddleWare = createSagaMiddleWare();\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleWare));\nsagaMiddleWare.run(rootSaga);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter basename=\"/\">\n        <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}